#LyX 1.5.4 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass article
\language spanish
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
Cluster con acceso remoto
\end_layout

\begin_layout Standard
El principal objetivo del proyecto es la contrucción de un cluster con acceso
 remoto.
 En esta sección se describirá el sistema Fenton, la solución propuesta
 por el equipo para cumplir con tal objetivo.
 Se profundizará en las tecnologías elegidas de la etapa de relevamiento
 e investigación (ver sección 
\begin_inset LatexCommand vref
reference "sec:Relevamiento-de-tecnologías"

\end_inset

) para la implementación del gestionamiento de recursos (DRM) y el despacho
 de trabajos.
 Se detallará la construcción de la interfaz para acceso remoto al cluster
 y además se mencionarán las herramientas utilizadas para el desarrollo
 y la documentación a lo largo del proyecto.
 Algo relevante de mencionar es que durante todo el proceso de desarrollo
 del sistema se  utilizaron exclusivamente herramientas de código libre
 (OSS).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Arquitectura-Visio.png
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Arquitectura
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Gerenciador de recursos y despachador de trabajos
\end_layout

\begin_layout Standard
A continuación se presentán y justificarán las tecnologías seleccionadas
 para la implementación del gerenciador de recursos (DRM) y despachador
 de trabajos del sistema Fenton.
 La etapa de relevamiento de tecnologías fue una de las más importantes
 del proyecto, y en la implementación del gestionador de recursos y el planifica
dor de trabajos radica uno de los mayores riesgos para el proyecto.
 Por esta razón para la construcción del sistema se seleccionaron herramientas
 con un buen rendimiento y estabilidad que brindan una solida base sobre
 la cual construir el sistema.
 
\end_layout

\begin_layout Standard
Luego de evaluar diversas tecnologías actuales para la implementación de
 clusters se optó por utilizar TORQUE como DRM y Maui como despachador,
 dejando abierta la posibilidad de anexar Gold para la contabilización de
 recursos.
 Existen varios casos de estudio (ver sección 
\begin_inset LatexCommand vref
reference "sub:Torque-Casos-de-estudio"

\end_inset

) donde es posible comprobar que TORQUE resulta muy adecuado para la gestión
 de clusters de pequeño a mediano porte.
 Tanto TORQUE como Maui requieren pocos recursos de hardware para su ejecución,
 ventaja que resulta muy importante en un cluster de reducidas dimensiones
 como el que se desea utilizar.
\end_layout

\begin_layout Standard
TORQUE es un derivado de PBS 
\begin_inset Foot
status open

\begin_layout Standard
PBS es un DRM que fue desarrollado a mediados los años '90 para manejar
 recursos de computo aeroespacial en la NASA.
\end_layout

\end_inset

 por lo que cuenta con un código base muy estable y sólido.
 Esto ayuda a mitigar los riesgos presentados por tecnologías emergentes
 que ofrecen funcionalidades innovadoras pero que también resultan problemáticas
 en un proyecto de corta duración.
 TORQUE y Maui son productos de relativamente pequeño tamaño, esto facilita
 su comprensión y por lo tanto su modificación y adaptación a necesidades
 particulares de investigación.
\end_layout

\begin_layout Standard
Si bien TORQUE brinda todas las funcionalidades necesarias para satisfacer
 los requerimientos del proyecto, también presenta ciertas carencias dentro
 de las cuales las más importantes son CPU harvesting y la migración de
 procesos.
 Dichas carencias no son un problema importante ya que el cluster cuenta
 con nodos homogéneos y dedicados, esto significa que los nodos del cluster
 tendrán capacidades de procesamiento muy similares y no serán compartidos
 con otras aplicaciones externas al cluster (e.g.: aplicaciones de escritorio).
\end_layout

\begin_layout Standard
Como se mencionó en la sección de relevamiento de tecnologías, si bien TORQUE
 contiene la lógica necesaria para llevar a cabo la planificación de trabajos
 se trata de una lógica muy básica.
 Por esta razón se optó por incorporar a Maui para este proposito.
 Maui presenta un algoritmo de planificación con diversas características
 y configuraciones que permiten mejorar la performance del cluster y además
 brinda la posibilidad de implementar un algoritmo de planificación desarrollado
 a medida.
\end_layout

\begin_layout Standard
Inicialmente se evaluó la herramienta Gold para llevar registro y contabilizar
 la utilización de recursos en clusters.
 Finalmente Gold fue dejado fuera del alcance del proyecto, pero mantenemos
 y recomendamos la utilización de Gold para trabajos futuros sobre el cluster.
\end_layout

\begin_layout Standard
Para el monitoreo del sistema se decidió utilizar la herramienta Ganglia.
 Ganglia ya era utilizado como herramienta de monitoreo por el grupo CeCal
 y luego de evaluar sus funcionalidades se optó por continuar con su utilización
 debido su excelente desempeño, su bajo consumo de recursos y sus reportes
 en tiempo real e históricos del uso del cluster.
\end_layout

\begin_layout Subsection
Desarrollo de la interfaz de acceso remoto
\end_layout

\begin_layout Standard
Hasta aquí las herramientas para construir la infraestructura del cluster,
 a continuación detallaremos el componente de acceso remoto del sistema
 Fenton.
 Un requerimiento importante es brindar una interfaz de usuario simple y
 de fácil acceso para usuarios no especializados, por esta razón y para
 evitar problemas con la posible heterogeneidad de los sistemas clientes
 se decidió brindar una interfaz de usuario web para el acceso remoto al
 cluster.
\end_layout

\begin_layout Standard
El desarrollo del componente de acceso web requirió la definición de varias
 herramientas: un servidor web para alojar nuestra aplicación, un lenguaje
 server-side para implementar la lógica y un manejador de bases de datos
 relacionales para almacenar usuarios, trabajos y resultados de ejecuciones.
 La utilización de TORQUE y Maui para el manejo de recursos y la planificación
 de trabajos del cluster nos condiciona a trabajar sobre un sistema operativo
 GNU/Linux o Unix-BSD.
 Por esta razón se decidió utilizar Apache como servidor web de la interfaz
 de usuario.
\end_layout

\begin_layout Standard
Teniendo en cuenta los conocimientos previos de los integrantes del grupo,
 así como la curva de aprendizaje de los diferentes lenguajes para desarrollar
 aplicaciones web, se decidió utilizar PHP como lenguaje de implementación.
 El servidor web Apache brinda un excelente soporte para la ejecución de
 código PHP por lo que resulta una pareja ideal.
 Como entorno de desarrollo para la implementación de la logica en código
 PHP necesaria se utilizó Eclipse con el plugin PHPEclipse.
 
\end_layout

\begin_layout Standard
Para el almacenamiento de datos se consideraron dos motores de base de datos
 relacional: PostgreSQL y MySQL.
 Finalmente se seleccionó trabajar con PostgreSQL, pero igualmente ambos
 cumplen con creces los requerimientos del proyecto.
 PostgreSQL es un motor de base de datos relacional de tipo empresarial,
 maduro, con buena integración con PHP y un muy buen soporte por parte de
 la comunidad.
 Si bien PostgreSQL no es tan amigable ni tan popular como MySQL, cuenta
 con una licencia de tipo BSD (Berkeley Software Distribution) mucho más
 flexible y permisiva que la licencia utilizada por MySQL.
 
\end_layout

\begin_layout Standard
A la hora de la implementación se realizó una clara separación entre la
 capa de presentación y la capa con la lógica de negocios, desacoplando
 asi la presentación de la información con el comportamiento de la aplicación.
 El acceso a datos se encapsuló en un módulo especifico, esto redundó en
 una ventaja para el producto: para utilizar otro manejador de base de datos
 relacional de condiciones similares solamente es necesario reimplementar
 el módulo y repetir la etapa de testeo.
 La apariencia del sitio también podía variar durante la implementación,
 por lo tanto además de separar la lógica de la aplicación de la capa de
 presentación, esta última se dividió por un lado en scripts PHP que reciben
 los pedidos del usuario y actúan en consecuencia, y por otro lado en archivos
 HTML y CSS orientados a la forma en que estos resultados se muestran.
 Para esto se utilizaron plantillas que son cargadas en cada script PHP
 para luego ser desplegadas en pantalla.
 En definitiva se obtuvo una versión moderada del patrón Model-View-Controller
 (MVC).
 Si en algún momento se desea rediseñar el sitio manteniendo el mismo funcionami
ento solamente es necesario modificar las hojas de estilos (CSS) y las plantilla
s en formato HTML
\begin_inset Foot
status open

\begin_layout Standard
En realidad estas plantillas no son HTML puro ya que cuentan con etiquetas
 especiales que determinan la posición del contenido dinámico en la página.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Standard
\begin_inset Graphics
	filename diagrama.png
	width 10cm

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A su vez se separó en módulos distintos las interfaces con: TORQUE, Maui
 y el sistema operativo.
 Las interfaces con TORQUE y Maui brindan al usurio administrador información
 sobre el estado del sistema y permiten que este realice acciones sobre
 los trabajos como por ejemplo: iniciar, detener, etc.
 La interfaz con el sistema operativo es utilizada para almacenar los trabajos
 con el código fuente, archivos binarios, ejecutables y los archivos conteniendo
 los resultados de los trabajos ejecutados por los usuarios.
 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename esquema.png
	width 10cm

\end_inset


\end_layout

\begin_layout Standard
La aplicación permite un manejo de usuarios con perfiles diferenciados.
 Inicialmente se realiza una clara separación entre usuarios administradores
 y usuarios normales, pero es posible ejercer diferencias más sutiles entre
 ellos.
 Para esto se diseñó un sistema de grupos de usuarios con funcionalidades
 asociadas.
 Cada usuario puede pertenecer a uno o más grupos, y estos a su vez pueden
 tener funcionalidades y trabajos asociados.
 Un usuario determinado puede hacer uso de una funcionalidad dada si pertenece
 a algún grupo que se lo permita, mientras que puede acceder a un trabajo
 determinado si pertenece a algún grupo con acceso al mismo.
\end_layout

\begin_layout Standard
La interfaz de usuario varía notablemente dependiendo si el usuario es un
 usuario administrador o un usuario normal.
 Si bien ambos usuarios tienen cierto conocimiento sobre el uso de aplicaciones,
 el usuario normal no tiene por qué estar interiorizado con el funcionamiento
 del cluster, por lo tanto se le presenta el sistema como un todo.
 Por otro lado el usuario administrador podrá desde su propia interfaz administr
ar los recursos del cluster, conocer el estado de los nodos del cluster
 e interactuar con ellos para solucionar posibles problemas o mejorar su
 performance.
 El usuario administrador tendrá a su cargo la tarea de mantener los usuarios
 y grupos del sistema así como el acceso de los mismos a los distintos trabajos.
 
\end_layout

\begin_layout Standard
Dado que nos encontramos en un ambiente multiusuario, la aplicación permite
 administrar las reservas del clúster, para organizar la utilización de
 recursos por varios usuarios de forma simultánea.
 Cada trabajo creado tendrá asociado un conjunto de recursos disponibles
 que determinarán el posterior funcionamiento de las ejecuciones de los
 trabajos por parte de los usuarios.
 Para esta implementación se restringió el uso de espacio de almacenamiento
 en el disco duro, tiempo máximo de ejecución y cantidad de nodos disponibles
 simultaneamente, pero es posible agregar otros recursos a restringir (por
 ejemplo: memoria, ciclos de procesador, etc.).
\end_layout

\begin_layout Standard
El usuario tendrá la posibilidad de subir un proyecto al cluster, compilarlo,
 ejecutarlo y consultar la salida a pantalla en tiempo real.
 Dados los extensos tiempos de ejecución de los programas que se corren
 en clusters de estas características, el usuario puede abandonar el sitio
 para luego volver en otro momento y verificar el estado de la ejecución.
 Si el programa continúa en ejecución podrá ver la salida a pantalla (nuevamente
 en tiempo real) junto con las salidas anteriores de la misma ejecución.
 Para los trabajos terminados existe la posibilidad de ver la salida en
 pantalla o descargarla en un archivo.
\end_layout

\begin_layout Standard
Los usuarios administradores cuentan con un conjunto de reportes estadísticos
 sobre los recursos del cluster como ser el porcentaje total de carga de
 CPU y memoria, se podrá verificar los tiempos de procesamiento de usuario
 y por proceso.
 Estos reportes brindan una gran ayuda en las tareas de administración de
 cluster.
 La generación de los reportes estadísticos se realiza con información brindada
 por TORQUE, Maui y Ganglia; y es posible detallar la información por nodo
 del cluster, usuario o proceso.
\end_layout

\begin_layout Standard
Por último se definió un mecanismo de alertas a los usuarios.
 Este permite enviar alertas a los diferentes usuarios del sistema, como
 ser inicio y finalización de trabajos, excesos de recursos del cluster,
 etc.
 Este mecanismo es totalmente extensible en cuanto a las definiciones de
 alertas y es soportado por funcionalidades de TORQUE y la base de datos.
 Los usuarios pueden observar las alertas en la interfaz web que le fueron
 enviadas por Fenton y se encuentra disponible la posibilidad de enviarlas
 por correo electrónico mediante un servidor SMTP.
 Este sistema de alertas debe ser disparado periódicamente por el sistema
 operativo (por ejemplo en GNU/Linux mediante el utilitario cron o anacron).
\end_layout

\begin_layout Subsection
Otras herramientas
\end_layout

\begin_layout Standard
En el transcurso del proyecto fueron necesarias otras herramientas para
 algunos tipos de tareas.
 Fue necesario contar con una herramienta colaborativa permitiera compartir
 y versionar tanto el código como los documentos.
 Para esto se utilizó Google Code, un servicio de Google que brinda alojamiento
 a proyectos de software.
 Algunas de las funcionalidades que ofrece Google Code son: control de versiones
 utilizando  Subversion
\begin_inset Foot
status open

\begin_layout Standard
Subversion es un software de control de versiones diseñado específicamente
 para reemplazar al popular CVS.
\end_layout

\end_inset

, un manejador de incidencias, una Wiki, etcétera.
\end_layout

\begin_layout Standard
En lo que corresponde a la documentación del proyecto utilizamos LyX.
 LyX es un programa gráfico que permite la edición de texto usando LaTeX,
 por lo que hereda todas las capacidades de LaTeX (notación científica,
 edición de ecuaciones, creación de índices, etcétera) y por supuesto mantiene
 el enfoque WYSIWYM de LaTeX.
\end_layout

\begin_layout Subsection
Testeo de la solución
\end_layout

\begin_layout Standard
Una de las actividades del proyecto fue el testeo de las tecnologías propuestas
 y el testeo de la interfaz web desarrollada.
 Los objetivos de esta etapa son la verificación y validación de los requerimien
tos funcionales establecidos en etapas más tempranas y que forman parte
 de los objetivos del proyecto.
\end_layout

\begin_layout Standard
Durante el proceso de testing se aplicaron dos tipos de test, se realizó
 un testeo funcional complementado por un testeo exploratorio.
 El testing funcional verifica el cumplimiento de los requerimientos funcionales
 contra los casos de test, en un entorno que emula un ambiente de producción
 del sistema.
 El objetivo de este testeo es verificar si el comportamiento observado
 del software a prueba coincide o no con sus especificaciones.
 
\end_layout

\begin_layout Standard
El testeo exploratorio es un proceso simultáneo de exploración y aprendizaje
 del producto, diseño y ejecución de pruebas.
 La estrategia en este caso fue recorrer las funcionalidades de la interfaz
 en busca de defectos de diseño, de programación, de funcionamiento, etc.
 Durante el testeo exploratorio se generaron una serie de casos de test
 que apuntan a cubrir los requerimientos funcionales principales del sistema.
 Estos casos de test se incluyeron en la Guía de Test (ver página 
\begin_inset LatexCommand pageref
reference "sub:Guía-de-testeo"

\end_inset

), pretendiendo guiar el testeo en posteriores ocasiones.
 El mismo incluye casos de test y escenarios de pruebas que integran los
 casos de test, así como una descripción del proceso ejecutado en cada caso.
\end_layout

\begin_layout Standard
Las herramientas utilizadas en el testing fueron la guía de test y las funcional
idades provistas por el Google Code como son registro incidencias y Wiki.
\end_layout

\end_body
\end_document
