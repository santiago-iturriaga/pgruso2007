#LyX 1.5.6 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass article
\language spanish
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
Conclusiones
\end_layout

\begin_layout Standard
La computación de alto rendimiento es fundamental para la resolución de
 problemas con un alto grado de complejidad computacional, estos problemas
 provienen de disciplinas como matemática, física o química y no se encuentran
 necesariamente relacionados con la informática.
 Muchos de los usuarios de clusters de computadores de alto rendimiento
 no poseen una formación en informática y su uso les presenta una importante
 dificultad técnica.
 En el primer capítulo de éste documento se describen como objetivos principales
 del proyecto de grado la construcción de un cluster de computadores de
 alto rendimiento y la necesidad de facilitar el acceso al mismo a usuarios
 no especializados en informática.
\end_layout

\begin_layout Standard
Durante su desarrollo, éste proyecto de grado permitió explorar a fondo
 la problemática de la computación de alto rendimiento mediante etapas de
 aprendizaje e investigación de tecnologías.
 Como parte del aprendizaje los estudiantes cursaron la materia 'Computación
 de Alta Performance' dictada por el grupo CeCal del Instituto de Computación
 de la Facultad de Ingeniería.
 Esta materia introdujo a los estudiantes a los conceptos principales de
 la computación de alto rendimiento y a la programación paralela y distribuida.
 Por otro lado se realizó en el proyecto de grado una etapa de investigación
 de tecnologías que resultó muy importante y positiva para el desarrollo
 del proyecto.
 En esta etapa se investigaron las herramientas de código abierto para la
 implementación de clusters de computadores; sus características, sus funcionali
dades y sus limitaciones.
 
\end_layout

\begin_layout Standard
Una de las primeras aplicaciones investigadas fue Condor, un sistema diseñado
 fundamentalmente para High-Throughput Computing (HTC) pero que puede adaptarse
 a los requerimientos planteados en el proyecto de grado.
 Condor brinda funcionalidades interesantes como migración de procesos entre
 nodos y la capacidad de aprovechar ciclos ociosos de procesador (CPU Harvesting
).
 Sin embargo Condor ofrece un soporte muy básico a las bibliotecas PVM y
 MPI para programación distribuida.
 Otra aplicación investigada fue Sun Grid Engine, un software para administració
n de recursos distribuidos actualmente desarrollado por Sun Microsystems.
 Sun Grid Engine provee las funcionalidades requeridas para el proyecto
 de grado, pero presenta como desventaja ser un único gran paquete indivisible
 y muy complejo, lo cual hace muy difícil cualquier tipo de adaptación o
 modificación a su funcionamiento.
 Por último se investigó TORQUE, un software para administración de recursos
 distribuidos con funcionalidades muy similares a las presentadas por Sun
 Grid Engine desarrollado por Cluster Resources Inc.
 A diferencia de Sun Grid Engine, TORQUE es un software de reducidas dimensiones
 enfocado específicamente en la administración de recursos que no contiene
 la lógica necesaria para la planificación de la ejecución de trabajos en
 un cluster de computadores.
 Cluster Resources Inc.
 desarrolla también Maui, un software especializado en la planificación
 y despacho de trabajos en clusters de computadores que resulta la pareja
 ideal para TORQUE.
 TORQUE y Maui brindan además un excelente soporte de forma integrada a
 la biblioteca MPI para programación paralela y distribuida.
 TORQUE junto con Maui proveen las funcionalidades requeridas para el proyecto
 de grado y además presentan un bajo consumo de memoria, característica
 que resulta muy importante en clusters pequeños.
 
\end_layout

\begin_layout Standard
Como se detalló en el cuarto capítulo de este documento, TORQUE y Maui fueron
 las herramientas seleccionadas para la administración de recursos y despacho
 de trabajos en el cluster.
 TORQUE y Maui permitieron construir una sólida plataforma de ejecución
 de trabajos, y fue a partir de esta plataforma que se desarrolló una interfaz
 web para el acceso remoto al sistema.
 Ésta interfaz web de acceso al sistema permite una utilización amigable
 del cluster por parte de usuarios no especializados, además permite a usuarios
 técnicos la administración de los recursos del cluster, la administración
 de la seguridad del cluster y ofrece un conjunto de reportes históricos
 y en tiempo real sobre el uso de los recursos en el cluster.
 Para la generación de estos reportes se integró la interfaz web del sistema
 con Ganglia, un sistema de monitoreo escalable y distribuido para sistemas
 de alto rendimiento.
\end_layout

\begin_layout Standard
Podemos decir que el resultado de éste proyecto de grado fue muy positivo
 y los objetivos mencionados en el primer capítulo del documento se alcanzaron
 en buena forma.
 Esto permite que hoy en día el sistema Fenton se encuentre en producción
 y listo para su utilización.
\end_layout

\end_body
\end_document
